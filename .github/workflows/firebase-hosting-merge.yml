# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - main
# env:
#   NEXT_PUBLIC_ANALYTICS_ID: 'UA-130018-1'
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get version
      - id: get_version
        uses: battila7/get-version-action@v2
      - run: echo ${{ steps.get_version.outputs.version }}
      - run: echo ${{ steps.get_version.outputs.version-without-v }}

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Build to IPFS
        env:
          NEXT_PUBLIC_VERSION: ${{ steps.get_version.outputs.version }}
        run: npm ci && npm run build

      - name: Deploy to IPFS
        uses: aquiladev/ipfs-action@v0.2.1
        with:
          path: ./dist/apps/webapp/exported
          service: pinata
          pinataKey: ${{ secrets.PINATA_KEY }}
          pinataSecret: ${{ secrets.PINATA_SECRET }}
          pinataPinName: effective-adventure-webapp-${{ steps.get_version.outputs.version }}

      # "bafkreicysg23kiwv34eg2d7qweipxwosdo2py4ldv42nbauguluen5v6am"
      # TODO: SAVE TO ENV
      - run: echo /ipfs/${{ steps.ipfs.outputs.cid }}

      # TODO: SAVE TO ENV
      # https://bafkreicysg23kiwv34eg2d7qweipxwosdo2py4ldv42nbauguluen5v6am.ipfs.dweb.link
      - run: echo ${{ steps.ipfs.outputs.url }}

      # git_branch=`git symbolic-ref --short HEAD`
      # git_hash=`git rev-parse --short HEAD`

      # TODO: add if
      - name: Update DNSLink
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          RECORD_DOMAIN: "alexpedersen.dev"
          RECORD_NAME: "_dnslink.ipfs-effective-adventure"
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        id: dnslink
        uses: textileio/cloudflare-update-dnslink@master
        with:
          cid: ${{ steps.ipfs.outputs.cid }}

      - name: Build to Firebase
        env:
          NEXT_PUBLIC_VERSION: ${{ env.NEXT_PUBLIC_VERSION }}
          NEXT_PUBLIC_IPFS_CID: ${{ steps.ipfs.outputs.cid }}
        run: npm run build
        # run: npm ci && npm run build

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_EFFECTIVE_ADVENTURE }}'
          channelId: live
          projectId: effective-adventure
