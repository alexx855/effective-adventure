# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - main
  release:
    types: [created]
# env:
#   NEXT_PUBLIC_ANALYTICS_ID: 'UA-130018-1'
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2
        run: |
          echo "Branch: ${{ steps.vars.outputs.branch }}"
          echo "Sha: ${{ steps.vars.outputs.sha_short }}"
          echo ${{ steps.get_version.outputs.version }}
          echo ${{ steps.get_version.outputs.version-without-v }}

      - name: Build
        run: npm ci && npm run build
        env:
          NEXT_PUBLIC_VERSION: ${{ steps.get_version.outputs.version }}-${{ steps.vars.outputs.sha_short }}

      - name: Deploy to IPFS
        id: ipfs
        uses: aquiladev/ipfs-action@v0.2.1
        with:
          path: ./dist/apps/webapp/exported
          service: pinata
          pinataKey: ${{ secrets.PINATA_KEY }}
          pinataSecret: ${{ secrets.PINATA_SECRET }}
          pinataPinName: effective-adventure-${{ steps.get_version.outputs.version-without-v }}
        run:  |
          echo /ipfs/${{ steps.ipfs.outputs.cid }}
          echo ${{ steps.ipfs.outputs.url }}

      - name: Update DNSLink
        id: dnslink
        uses: textileio/cloudflare-update-dnslink@master
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          RECORD_DOMAIN: 'alexpedersen.dev'
          RECORD_NAME: '_dnslink.ipfs-effective-adventure'
        with:
          cid: ${{ steps.ipfs.outputs.cid }}

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_EFFECTIVE_ADVENTURE }}'
          channelId: live
          projectId: effective-adventure
